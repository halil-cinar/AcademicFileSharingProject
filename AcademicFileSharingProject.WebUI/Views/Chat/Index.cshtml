@{
    ViewData["Title"] = "Index";
    ViewData["pageName"] = "/chat";
    Layout = "~/Views/Shared/_Layout.cshtml";
}

@section CSS {


    <!-- Google Fonts -->

    <link rel="stylesheet" href="https://cdnjs.cloudflare.com/ajax/libs/font-awesome/4.7.0/css/font-awesome.css">

    @*     <link href="https://cdn.jsdelivr.net/npm/bootstrap@5.1.3/dist/css/bootstrap.min.css" rel="stylesheet" integrity="sha384-1BmE4kWBq78iYhFldvKuhfTAU6auU8tT94WrHftjDbrCEXSU1oBoqyl2QvZ6jIW3" crossorigin="anonymous">
   <script src="https://cdn.jsdelivr.net/npm/bootstrap@5.0.2/dist/js/bootstrap.bundle.min.js" integrity="sha384-MrcW6ZMFYlzcLA8Nl+NtUVF0sA7MsXsP1UyJoMp4YLEuNSfAP+JcXn/tWtIaxVXM" crossorigin="anonymous"></script>
 *@

    <link href="~/css/chat.css" rel="stylesheet" />
}

@model ChatListDto

<!-- char-area -->
<section class="message-area">
    <div class="container">
        <div class="row">
            <div class="col-12">
                <div class="chat-area">
                    <!-- chatlist -->
                    @await Component.InvokeAsync("_ChatPageChatsComponent")
                    <!-- chatlist -->
                    <!-- chatbox -->
                    <div class="chatbox">
                        <div class="modal-dialog-scrollable">
                            @if (Model != null)
                            {
                                <div class="modal-content">
                                    <div class="msg-head">
                                        <div class="row">
                                            <div class="col-8">
                                                <div class="d-flex align-items-center">
                                                    <span class="chat-icon"><img class="img-fluid" src="https://mehedihtml.com/chatbox/assets/img/arroleftt.svg" alt="image title"></span>
                                                    <div class="flex-shrink-0">
                                                        <img class="img-fluid rounded-circle" style="width:70px;" src="/Media/@(
                                                                Model.ChatType == AcademicFileSharingProject.Entities.Enums.EChatType.Private ?
                                                                "" + (Model.ChatUsers.FirstOrDefault(x => x.UserId != ViewBag.loginUserId)?.User?.ProfileImageId??(int)EMediaKey.Person) :
                                                                ""+(int)EMediaKey.Group 
                                                                )" alt="user img">
                                                    </div>
                                                    <div class="flex-grow-1 ms-3">
                                                        <h3>
                                                            @(
                                                                Model.ChatType == AcademicFileSharingProject.Entities.Enums.EChatType.Private ?
                                                                "" + Model.ChatUsers.FirstOrDefault(x => x.UserId != ViewBag.loginUserId).User.FullName :
                                                                "" + Model.Title
                                                                )
                                                        </h3>
                                                        <p>
                                                            @(
                                                                Model.ChatType == AcademicFileSharingProject.Entities.Enums.EChatType.Private ?
                                                                "" + Model.ChatUsers.FirstOrDefault(x => x.UserId != ViewBag.loginUserId).User.Title :
                                                                "" + string.Join(",", Model.ChatUsers.Select(x => x.User.FullName).ToList())
                                                                )
                                                        </p>
                                                    </div>
                                                </div>
                                            </div>
                                            <div class="col-4">
                                                @*  <ul class="moreoption">
                                            <li class="navbar nav-item dropdown">
                                            <a class="nav-link dropdown-toggle" href="#" role="button" data-bs-toggle="dropdown" aria-expanded="false"><i class="fa fa-ellipsis-v" aria-hidden="true"></i></a>
                                            <ul class="dropdown-menu">
                                            <li><a class="dropdown-item" href="#">Action</a></li>
                                            <li><a class="dropdown-item" href="#">Another action</a></li>
                                            <li>
                                            <hr class="dropdown-divider">
                                            </li>
                                            <li><a class="dropdown-item" href="#">Something else here</a></li>
                                            </ul>
                                            </li>
                                            </ul> *@
                                            </div>
                                        </div>
                                    </div>


                                    <div class="modal-body">
                                        <div class="msg-body">
                                            <ul id="messagesList">
                                                @for (int i = 0; i < (ViewBag.Messages?.Values?.Count ?? 0); i++)
                                                {
                                                    var item = ViewBag.Messages.Values[i] as MessageListDto;

                                                    <li class="@((item.SenderUserId!=ViewBag.loginUserId)?"sender":"repaly")">
                                                        <p style="max-width:500px;">
                                                            @item.Message
                                                        </p>
                                                        <span class="time">@item.CreatedTime.ToShortDateString() @item.CreatedTime.ToShortTimeString()</span>
                                                    </li>

                                                }

                                            </ul>
                                        </div>
                                    </div>


                                    <div class="send-box">

                                        <div id="send-message">
                                            <input type="hidden" value="@Model.Id" name="ChatId" />
                                            <div class="d-flex justify-content-between">
                                                <input type="text" class="form-control" autocomplete="off" aria-label="message…" name="Message" id="messageInput" placeholder="Write message…">

                                                <button type="button" id="sendButton"><i class="fa fa-paper-plane" aria-hidden="true"></i> Send</button>
                                            </div>
                                           @*  @{
                                                
                                            }
                                            <div class="send-btns">
                                                <div class="attach">
                                                    <div class="button-wrapper">
                                                        <span class="label">
                                                            <img class="img-fluid" src="https://mehedihtml.com/chatbox/assets/img/upload.svg" alt="image title"> attached file
                                                        </span><input type="file" name="upload" id="uploadMediaInput" class="upload-box" placeholder="Upload File" aria-label="Upload File">
                                                    </div>


                                                </div>
                                            </div> *@

                                        </div>


                                    </div>
                                </div>
                            }
                        </div>
                    </div>
                </div>
                <!-- chatbox -->


            </div>
        </div>
    </div>
</section>
<script>
    var myDiv = document.getElementById("messagesList")
    myDiv.scrollBy(0,200)
</script>
<input type="hidden" id="senderUserId" value="@(ViewBag.SenderUserId)" />
@section Scripts {



    <script>

       

        document.getElementById("sendButton").addEventListener("click", function () {
            var message = document.getElementById("messageInput").value;
            // var uploadMediaInput = document.getElementById("uploadMediaInput");
            // let files= uploadMediaInput.files

            // let formdata= new FormData();
            // formData.append("Message", message);
            // formdata.append("ChatId", @Model?.Id);
            // formdata.append("SenderUserId",@ViewBag.User.Id)
            // formdata.append("")

            fetch("/chat/send", {
                method: 'POST',
                headers: {
                    'Accept': 'application/json',
                    'Content-Type': 'application/json'
                },
                body: JSON.stringify({
                    Message: message,
                    SenderUserId: @ViewBag.User.Id,
                    ChatId: @Model?.Id

                                    })
            });
        })

        function ReceiveMessage(message) {
            if (message.chatId == @Model?.Id) {
                console.log(message)
                var li = document.createElement("li");
                li.className += (message.senderUserId != @ViewBag.loginUserId ? "sender" : "repaly")
                document.getElementById("messagesList").appendChild(li);

                li.innerHTML = '<p>' + message.message + ' </p> <span class="time">Now</span>'
            } else {
                showNotification(message.message)
            }
        }


    </script>
}

